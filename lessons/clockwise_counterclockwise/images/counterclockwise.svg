<svg width="100%" height="100%"
     xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     onload="startup(evt)">
    >
    <script>
    <![CDATA[
             var svgDocument;
             //var svgDocument;
             var xmlns="http://www.w3.org/2000/svg"

             function startup(evt) {
             O=evt.target
             svgDocument=O.ownerDocument
             grada = svgDocument.getElementById("offa");  // first color offset
             gradb = svgDocument.getElementById("offb");  // first color offset
             //gradd = svgDocument.getElementById("offd");  // first color offset
             gradd = svgDocument.getElementById("offe");  // first color offset
             gradc = svgDocument.getElementById("hex");   // composite image.
             offset()
             }

             limit=720  // larger number slows movement. Rotation starts slow and picks up speed.
             blu=1  // change from 2 to 5 had no effect.

             function repoint(){  // I can't tell if this function does anything.
             RG.setAttributeNS(null, 'cx', 100-x)           // not much change
             RG.setAttributeNS(null, 'fx', 60*Math.cos(x))  // not much change
             RG.setAttributeNS(null, 'fy', 30*Math.sin(x))  // not much change
             x=x+xincr
             if ((x<0)||(x>300))xincr=-xincr
                 window.setTimeout("repoint()", 10)
                 }

            function offset(){  // this moves the image
            rate=1 // controls the rate of movement
            onestep(rate)
            window.setTimeout("offset()",20)
            }
x=0
            function onestep(i){ // the 4 below replaced 'limit/(blu)'.
            S = "scale(" + 4 + ") rotate(" + ( -2 * x++) + " 40 40)";  // Scale sets the size and rotate rotates the image.
            //S = "scale(" + 4 + ") rotate(" + (+2 * x++) + " 40 40)"; // Scale sets the size and rotate rotates the image.
            //raised. cause changes in scale if lowered.  The scale rotates the blades.  The rotate changes the gradient.
            gradc.setAttribute ("transform", S);
            grada.setAttribute ("offset", blu/limit);   // gold
            gradb.setAttribute ("offset", blu/limit);   // red
            gradd.setAttribute ("offset", blu/limit);   // green
            blu=blu+i
            if ((blu>limit)) blu=0

            }
    //]]>
    </script>

             <linearGradient id="g">  // color gradient.
                 <stop offset="0" style="stop-color: #880"/>
                 <stop id="offa" offset=".3" style="stop-color: yellow"/>
                 <!--<stop id="offb" offset=".6" style="stop-color: #f0f"/>  puts a pink color on the yellow blade-->
                 <stop offset="1" style="stop-color: #cc9"/>
             </linearGradient>
             <linearGradient id="h">  // color gradient. green
                 <stop offset="0" style="stop-color: #396"/>
                 <stop id="offe" offset=".3" style="stop-color: #cf0"/>
                 <stop offset="1" style="stop-color: #99F"/>
             </linearGradient>
             <linearGradient id="i">  // color gradient.
                 <stop offset="0" style="stop-color: #888"/>
                 <stop id="offb" offset=".3" style="stop-color: #f68"/>
                 <!--<stop id="offb" offset=".6" style="stop-color: #f0f"/>  puts a pink color on the yellow blade-->
                 <stop offset="1" style="stop-color: #888"/>
             </linearGradient>
             <defs>
                 <path id="hp" d="M 40 0 Q 55 15 40 40" />  // M is a lineto. Q is a quadratic BÃ©zier curve.
             </defs>
             <g id="hex"> <!-- Houses a composite of 3 copies of ggg rotated 120 degrees from each other. -->
                 <g id="ggg">  <!-- Houses a composite of 3 copies of g rotated 40 degrees from each other. -->
                     <use xlink:href="#hp" transform="rotate( 0 40 40)" style="fill:url(#g)"/>
                     <use xlink:href="#hp" transform="rotate(40 40 40)" style="fill:url(#h)"/>
                     <use xlink:href="#hp" transform="rotate(80 40 40)" style="fill:url(#i)"/>-->
                 </g>
                 <use xlink:href="#ggg" transform="rotate(120 40 40)"/><!-- this rotates a duplicate of 3 blades by 120 degrees -->
                 <use xlink:href="#ggg" transform="rotate(240 40 40)"/><!-- this rotates a duplicate of 3 blades by 240 degrees -->
             </g>
         </svg>
